<style lang="less">
  .hd {
    height: 90vh;
    background: #fff;
    .board {
      width: 660rpx;
      height: 80vh;
      overflow: scroll;
      background: #f8f8f8;
      margin:0 auto;
      top:126rpx;
      position:relative;
      top:126rpx;
      box-sizing: border-box;
      padding: 40rpx;
      box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
      .msg {
        margin-bottom: 60rpx;
      }
      .fixed-message {
        position:relative;
        display:flex;
        flex-direction:row;
        justify-content:flex-end;
        align-items:center;
        .user-info {
          &:after {
            content: '';
            position: absolute;
            left: -32rpx;
            top: 34rpx;
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 12px 12px 0 0;
            border-color: @blue transparent transparent transparent;
          }
        }
        .content {
          background: @blue;
          color: #fff;
          max-width: 420rpx;
          position: relative;
          margin-right: 32rpx;
          font-size:16px;
          padding:10rpx 20rpx;
          word-wrap:break-word;
          border-radius:4px;
        }
      }
      .user-message {
        position: relative;
        display: flex;
        flex-direction: row;
        justify-content:flex-start;
        align-items:center;
        .user-info {
          &:after {
            content: '';
            position: absolute;
            right: -32rpx;
            top: 40rpx;
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 0 12px 12px 0px ;
            border-color: transparent @green transparent transparent;
          }
        }
        .content {
          background: @green;
          max-width: 420rpx;
          margin-left: 32rpx;
          position: relative;
          font-size:12px;
          padding:10rpx 20rpx;
          word-wrap:break-word;
          border-radius:4px;
          .time {
            position: absolute;
            height: 30rpx;
            font-size: 9px;
            bottom: -30rpx;
            min-width:160rpx;
            left:0;
            text-align:center;
            line-height:36rpx;
          }
        }

      }
      .user-info {
        position: relative;
        display:flex;
        flex-direction:column;
        align-items:center;
        .avatar {
          image {
            border-radius: 50%;
            width: 60rpx;
            height: 60rpx;
            box-shadow:0 0 6px #aaa;
          }
        }
        .nickname {
          max-width: 140rpx;
          font-size: 10px;
          max-height:68rpx;
          overflow:hidden;
        }
      }
    }
  }
  .comment {
    .van-field__body--textarea {
      min-height:7vh;
    }
  }
</style>
<template>
  <wxs module="moment" src="../utils/time-filter.wxs"></wxs>
  <view>
    <back color="black"/>
    <van-toast id="van-toast" />
      <view class="hd">
        <view class="board">
          <view class="fixed-message msg">
            <view class="content">hi</view>
            <view class="user-info">
              <view class="avatar">
                <image src="../img/nfsysu-logo.jpg"></image>
              </view>
              <view class="nickname">南苑</view>
            </view>
          </view>
          <view class="user-message msg"
            wx:for="{{comments}}"
            wx:key="{{index}}"
            wx:if="{{comments.length}}"
          >
            <view class="user-info">
              <view class="avatar">
                <image src="{{item.avatar}}"></image>
              </view>
              <view class="nickname">{{item.username}}</view>
            </view>
            <view class="content">{{item.content}}
              <view class="time">{{ moment.relativeTime(item.created_time) }}</view>
            </view>
          </view>
        </view>
      </view>
      <field
        class="comment"
        value="{{ message }}"
        type="textarea"
        placeholder="说点什么"
        autosize
        maxlength=140
        border="{{ true }}"
        use-button-slot
        bind:change="send"
      >
        <van-button
          slot="button"
          size="small"
          type="primary"
          open-type="getUserInfo"
          loading="{{loading ? true : false}}"
          bind:getuserinfo="bindGetUserInfo">留言</van-button>
      </field>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Toast from 'components/vant/toast/toast'
  import BackBtn from 'components/back-btn'

  export default class Comment extends wepy.page {
    config = {
      usingComponents: {
        'field': '../components/vant/field/index',
        'van-button': '../components/vant/button/index',
        'van-toast': '../components/vant/toast/index'
      }
    }
    components = {
      back: BackBtn
    }
    data = {
      message: '',
      comments: null,
      loading: false,
      userInfo: null,
      isAuthorized: false
    }
    onLoad() {
      const self = this
      wx.getSetting({
        success (res) {
          if (res.authSetting['scope.userInfo']) {
            self.isAuthorized = true
            wx.getUserInfo({
              success: res => {
                console.log(res)
                self.userInfo = res.userInfo
                self.$apply()
              }
            })
            self.$apply()
          } else {
            console.log('未授权')
          }
        }
      })
      wx.cloud.callFunction({
        name: 'loadComments',
        success: res => {
          console.log(res.result.data, res.result.data.length)
          self.comments = res.result.data.reverse()
          self.$apply()
        }
      })
    }
    send(e) {
      this.message = e.detail
    }
    bindGetUserInfo(e) {
      console.log('bindGetUserInfo')
      const self = this
      if (!this.message) {
        Toast.fail({
          message: '请输入内容',
          duration: 1000
        })
        return
      }
      this.loading = true
      // 查看是否授权
      if (!self.isAuthorized) {
        wx.getUserInfo({
          success(res) {
            self.userInfo = res.userInfo
            self.sendComment()
            self.$apply()
          },
          fail(e) {
            Toast.fail({
              message: '未授权无法留言',
              duration: 1000
            });
          },
          complete() {
            self.loading = false
            self.$apply()
          }
        })
      } else {
        self.sendComment()
      }
    }
    sendComment() {
      const self = this
      const db = wx.cloud.database()
      db.collection('comments').add({
        data: {
          username: self.userInfo.nickName,
          created_time: new Date().getTime(),
          avatar: self.userInfo.avatarUrl,
          content: self.message
        }
      })
        .then(res => {
          console.log(res)
          wx.cloud.callFunction({
            name: 'loadComments',
            success: res => {
              console.log(res.result.data, res.result.data.length)
              self.comments = res.result.data.reverse()
              self.loading = false
              this.message = ''
              Toast.success({
                message: '留言成功',
                duration: 1000
              })
              self.$apply()
            }
          })
        })
    }
  }
</script>
